spring:
    application:
        name: authentication-service
    main:
        allow-bean-definition-overriding: true
    mvc:
        pathmatch:
            matching-strategy: ant_path_matcher
    session:
        redis:
            repository-type: indexed
management:
    endpoints:
        web:
            exposure:
                include: '*'
            cors:
                allowed-origins: '*'
                allow-credentials: false
    tracing:
        propagation:
            produce: w3c, b3, b3_multi
            consume: b3, w3c, b3_multi
        baggage:
            remote-fields: requestId
            correlation:
                fields: requestId

logging:
    pattern:
        level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-},requestId=%X{requestId:-}]"

baeldung:
    security:
        server:
            registration:
                registrar-client-id: registrar-client
                registrar-client-secret: "{noop}secret"

---
spring:
    config:
        activate:
            on-profile: consul
        import: consul:${consul_url:localhost:8500}
    cloud:
        consul:
            config:
                fail-fast: ${FAIL_FAST:true}
                format: yaml
            discovery:
                prefer-ip-address: true
    autoconfigure:
        exclude: org.springframework.cloud.consul.config.ConsulConfigAutoConfiguration

---
spring:
    config:
        activate:
            on-profile: dev
    security:
        oauth2:
            client:
                registration:
                    google:
                        client-id: ${CLIENT_ID}
                        client-secret: ${CLIENT_SECRET}
            authorizationserver:
                client:
                    google:
                        registration:
                            client-id: ${CLIENT_ID}
                            client-secret: ${CLIENT_SECRET}
                            client-authentication-methods:
                                - "client_secret_post"
                            authorization-grant-types:
                                - "authorization_code"
                                - "refresh_token"
                            redirect-uris:
                                - "http://127.0.0.1:3000"
                                - "http://127.0.0.1:9999"
                            scopes:
                                - "openid"
                                - "profile"
                                - "email"
                        require-authorization-consent: true
                        require-proof-key: true
                    spring:
                        registration:
                            client-id: "spring-test" #The name to be used in different configurations to refer this client.
                            client-secret: "sMJ1ltm5wxdcOeEJGaE6WdFj9ArR75wkBqUgVE7vwwo="  ##Using D3PasswordEncoder
                            client-authentication-methods: #methods supported to authenticate the client
                                - "client_secret_basic"
                                - "client_secret_post"
                            authorization-grant-types: #The flows this client support
                                - "authorization_code"
                                - "refresh_token"
                                - "client_credentials"
                            redirect-uris:  # The Url to be used at the end of successful authentication
                                - "https://127.0.0.1:9443/"
                                - "https://127.0.0.1:9443/login/oauth2/code/spring"
                                - "http://127.0.0.1:8081/"
                            post-logout-redirect-uris:
                                - "http://127.0.0.1:8081/"
                            scopes:
                                - "openid"
                                - "profile"
                                - "email"
                        require-authorization-consent: true
server:
    servlet:
        session:
            timeout: 365d
---
spring:
    config:
        activate:
            on-profile: prod
    security:
        oauth2:
            client:
                registration:
                    google:
                        client-id: ${CLIENT_ID}
                        client-secret: ${CLIENT_SECRET}
            authorizationserver:
                client:
                    google:
                        registration:
                            client-id: ${CLIENT_ID}
                            client-secret: ${CLIENT_SECRET}
                            client-authentication-methods:
                                - "client_secret_post"
                            authorization-grant-types:
                                - "authorization_code"
                                - "refresh_token"
                            redirect-uris:
                                - "https://spendingbetter.com"
                            scopes:
                                - "openid"
                                - "profile"
                                - "email"
                        require-authorization-consent: true
                        require-proof-key: true
