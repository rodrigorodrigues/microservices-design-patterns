spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
      authorizationserver:
        client:
          google:
            registration:
              client-id: ${CLIENT_ID}
              client-secret: ${CLIENT_SECRET}
              client-authentication-methods:
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://127.0.0.1:3000"
                - "http://127.0.0.1:9999"
              scopes:
                - "openid"
                - "profile"
                - "email"
            require-authorization-consent: true
            require-proof-key: true
  sleuth:
    sampler:
      probability: 1

com:
  microservice:
    authentication:
      jwt:
        keyValue: YTMwOTIwODE1MGMzOGExM2E4NDc5ZjhjMmQwMTdkNDJlZWZkOTE0YTMwNWUxMTgxMTFhZTI1ZDI3M2QyMTRmMjI5Yzg0ODBjYTUxYjVkY2I5ZmY0YmRkMzBlZjRjNDM2Y2NiYzhlZjQ0ODRjMWZlNzVmZjdjM2JiMjdkMjdmMjk=
      user-info-uri: ${USER_INFO_URI:http://localhost:9999/api/authenticatedUser}
