# This is a basic workflow to help you get started with Actions

name: CI - Build and push Docker images - Python Service

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: contains(toJson(github), 'build python-service')
    name: Build Docker Image and Publish to DockerHub

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login to Dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Replace FROM Dockerfile
      - name: Replace FROM Dockerfile
        run: |
          sed -i 's/tiangolo\/uwsgi-nginx-flask:python3.8/crawforc3\/raspberrypi-uwsgi-nginx-flask/g' ./python-service/Dockerfile

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./python-service
          file: ./python-service/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: fielcapao/microservices-design-patterns-python-service:latest
          build-args: |
            PORT=3005

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

#      # Build the Docker image
#      - name: Build
#        run: |
#          docker build -t fielcapao/microservices-design-patterns-python-service:latest \
#          --build-arg PORT="3005" ./python-service
#
#      # Push the Docker image
#      - name: Push
#        run: |
#          docker push fielcapao/microservices-design-patterns-python-service
